#!/usr/bin/env python3

import sys, os
import argparse
import pika, json
import logging.config
import config

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir)))

parser = argparse.ArgumentParser(description='Execute a Robomind Academy Python script.')
parser.add_argument('--pikaurl', type=str, default=config.PIKA_URL, help='rabbitmq url')
parser.add_argument('--logconf', type=str, default=config.LOG_CONFIG_FILE, help='port')
args = parser.parse_args()

# prepare pika
parameters = pika.URLParameters(args.pikaurl)
connection = pika.BlockingConnection(parameters)
channel = connection.channel()
channel.basic_qos(prefetch_count=1)


# prepare monitoring environment (including synchronous loghandler)
import monitor
monitor.mon = monitor.monitor_client.MonitorClient(connection, config.MONITOR_EXCHANGE)
monitor.mon.connect()

# prepare logging
logging.config.fileConfig(args.logconf)
logger = logging.getLogger(__name__)

# create the BubbleHub class that will handle the requests
from bubblehub import BubbleHub
bubble_hub = BubbleHub()
bubble_hub.connect(channel)

# start listening for RPC calls
channel.start_consuming()
